name: Ansible Container Build
on:
  push:
    branches:
      - 'main'
  

env:
  DOCKER_BUILDKIT: 1

jobs:

  # Build the container image
  build:
    name: Build Ansible Container
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    
    steps:

      - name: checkout main
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx
        
      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Use GitHub Caching for the Container Layers
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: caching
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
            
      - name: Build production image
        uses: docker/build-push-action@v2
        id: build
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: build/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/ansible-container:${{ github.sha }},
            ghcr.io/${{ github.repository }}/ansible-container:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache


  test_container:
    name: Test Container
    runs-on: [self-hosted, linux]
    needs: build
    container: 
      image: ghcr.io/${{ github.repository }}/ansible-container:${{ github.sha }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      env:
        actor: ${{ github.actor }}
        ANSIBLE_CONFIG: "test/ansible.cfg"
        VMWARE_HOST: "${{ secrets.VMWARE_HOST }}"
        VMWARE_USERNAME: "${{ secrets.VMWARE_USERNAME }}"
        VMWARE_PASSWORD: "${{ secrets.VMWARE_PASSWORD }}"
        ANSIBLE_BECOME_PASSWORD: "${{ secrets.ANSIBLE_BECOME_PASSWORD }}"
        ANSIBLE_VAULT_PASSWORD: "${{ secrets.ANSIBLE_VAULT_PASSWORD }}"
        ANSIBLE_DEPLOY_SSH_KEY: "${{ secrets.ANSIBLE_DEPLOY_SSH_KEY }}"
    
    steps:

      - name: checkout branch
        uses: actions/checkout@v3

      - name: create vault password file
        run: |
          echo "${{ secrets.ANSIBLE_VAULT_PASSWORD }}" > test/ansible-vault-password-file.txt
          chmod 0400 test/ansible-vault-password-file.txt

      - name: create ansible-vault ssh private key
        run: |
          echo "${{ secrets.ANSIBLE_DEPLOY_SSH_KEY }}" > test/ansible-ssh-private-key
          chmod 0400 test/ansible-ssh-private-key

      - name: run ansible
        id: run_ansible
        run: |
          rc=0
          cd test
          result=$(ansible-playbook test_ansible_vmware_connectivity.yml -e 'ansible_become_pass=${{ secrets.ANSIBLE_BECOME_PASSWORD }}')
          if [ $? -ne 0 ]; then
            rc=1
          fi
          echo "::set-output name=ansible_results::$result\n"
          exit $rc

  notifications:
    runs-on: ubuntu-latest
    needs: [build, test_container]
    if: always()
    
    steps:

      - name: slack
        id: slack_notifications
        uses: slackapi/slack-github-action@v1.18.0
        with:
          channel-id: 'C03B33YJUVC'
          payload: |
            {
            	"blocks": [
            		{
            			"type": "header",
            			"text": {
            				"type": "plain_text",
            				"text": "Ansible Container Build ${{ github.sha }}",
            				"emoji": true
            			}
            		},
            		{
            			"type": "section",
            			"text": {
            				"type": "mrkdwn",
            				"text": "Build Results"
            			}
            		},
            		{
            			"type": "section",
            			"text": {
            				"type": "mrkdwn",
                    "text": "image: ghcr.io/${{ github.repository }}/ansible-container:${{ github.sha }}"
            			}
            		}
            	]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}